[tool.ruff]
target-version = "py310"
line-length = 88
src = ["src", "tests", "examples"]

[tool.ruff.lint]
extend-safe-fixes = ["ALL"]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = [
  "A",
  "ARG",
  "B",
  "BLE",
  "COM",
  "C4",
  "D",
  "E",
  "ERA",
  "F",
  "FBT",
  "I",
  "INP",
  "N",
  "NPY",
  "PD",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PIE",
  "PT",
  "PTH",
  "Q",
  "PGH004",
  "RET",
  "RUF",
  "C90",
  "S",
  "SIM",
  "T10",
  "T20",
  "TID",
  "TCH",
  "UP",
  "N",
  "W",
  "YTT",
]

ignore = [
    "N803",
    "C408",
    "D101",
    "D103", # Missing docstring in public function
    "D102", # Missing docstring in public method
    # -- old
    "D104",
    "D105",
    "D203",
    "D205",
    "D401",
    "N806",
    "E731",
    "A003",
    "S101",
    "W292",
    "PLC1901",
    "TCH003",
    "B010",
    "PD011",
    "T201"
]

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "docs",
]

[tool.ruff.lint.isort]
known-first-party = ["finer"]
no-lines-before = ["future"]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
force-wrap-aliases = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.mypy]
python_version = "3.10"
packages = ["src/finer", "tests"]

show_error_codes = true

warn_unused_configs = true

follow_imports = "normal"
ignore_missing_imports = false

disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true

no_implicit_optional = true
check_untyped_defs = true

warn_return_any = true
